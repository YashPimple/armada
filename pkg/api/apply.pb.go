// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/api/apply.proto

package api

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v1 "k8s.io/api/core/v1"
	v11 "k8s.io/api/networking/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Armada job submission request composed of several Kubernetes objects.
// These objects make up a single Armada job;
// all objects are guaranteed to be created in the same cluster at the same time.
type ApplyRequest struct {
	// Objects to be created as part of this job.
	// The first object, which must be a pod, is interpreted as the main object of the job.
	// All objects are cleaned up if the main object exits for any reason.
	//
	// The owner references of all objects (except that of the main object)
	// are automatically set to the main object.
	// Hence, all objects must be in the same namespace -
	// an error is returned if objects reference different namespaces.
	//
	// The following annotations must be set on the main object:
	// armadaproject.io/priority: "<uint32 value expressing job priority>"
	// armadaproject.io/queue: "<name of the queue this job is submitted to>"
	// armadaproject.io/jobset: "<name of the job set this job is part of>"
	Objects []ApplyRequest_KubernetesObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects"`
}

func (m *ApplyRequest) Reset()      { *m = ApplyRequest{} }
func (*ApplyRequest) ProtoMessage() {}
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edec332191248d3b, []int{0}
}
func (m *ApplyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest.Merge(m, src)
}
func (m *ApplyRequest) XXX_Size() int {
	return m.Size()
}
func (m *ApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest proto.InternalMessageInfo

func (m *ApplyRequest) GetObjects() []ApplyRequest_KubernetesObject {
	if m != nil {
		return m.Objects
	}
	return nil
}

// Kubernetes objects that can be created as part of an Armada.
type ApplyRequest_KubernetesObject struct {
	// Types that are valid to be assigned to Object:
	//	*ApplyRequest_KubernetesObject_Pod
	//	*ApplyRequest_KubernetesObject_Ingress
	//	*ApplyRequest_KubernetesObject_Service
	//	*ApplyRequest_KubernetesObject_ConfigMap
	Object isApplyRequest_KubernetesObject_Object `protobuf_oneof:"object"`
}

func (m *ApplyRequest_KubernetesObject) Reset()      { *m = ApplyRequest_KubernetesObject{} }
func (*ApplyRequest_KubernetesObject) ProtoMessage() {}
func (*ApplyRequest_KubernetesObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_edec332191248d3b, []int{0, 0}
}
func (m *ApplyRequest_KubernetesObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyRequest_KubernetesObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyRequest_KubernetesObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyRequest_KubernetesObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest_KubernetesObject.Merge(m, src)
}
func (m *ApplyRequest_KubernetesObject) XXX_Size() int {
	return m.Size()
}
func (m *ApplyRequest_KubernetesObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest_KubernetesObject.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest_KubernetesObject proto.InternalMessageInfo

type isApplyRequest_KubernetesObject_Object interface {
	isApplyRequest_KubernetesObject_Object()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ApplyRequest_KubernetesObject_Pod struct {
	Pod *v1.Pod `protobuf:"bytes,1,opt,name=pod,proto3,oneof" json:"pod,omitempty"`
}
type ApplyRequest_KubernetesObject_Ingress struct {
	Ingress *v11.Ingress `protobuf:"bytes,2,opt,name=ingress,proto3,oneof" json:"ingress,omitempty"`
}
type ApplyRequest_KubernetesObject_Service struct {
	Service *v1.Service `protobuf:"bytes,3,opt,name=service,proto3,oneof" json:"service,omitempty"`
}
type ApplyRequest_KubernetesObject_ConfigMap struct {
	ConfigMap *v1.ConfigMap `protobuf:"bytes,4,opt,name=configMap,proto3,oneof" json:"configMap,omitempty"`
}

func (*ApplyRequest_KubernetesObject_Pod) isApplyRequest_KubernetesObject_Object()       {}
func (*ApplyRequest_KubernetesObject_Ingress) isApplyRequest_KubernetesObject_Object()   {}
func (*ApplyRequest_KubernetesObject_Service) isApplyRequest_KubernetesObject_Object()   {}
func (*ApplyRequest_KubernetesObject_ConfigMap) isApplyRequest_KubernetesObject_Object() {}

func (m *ApplyRequest_KubernetesObject) GetObject() isApplyRequest_KubernetesObject_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *ApplyRequest_KubernetesObject) GetPod() *v1.Pod {
	if x, ok := m.GetObject().(*ApplyRequest_KubernetesObject_Pod); ok {
		return x.Pod
	}
	return nil
}

func (m *ApplyRequest_KubernetesObject) GetIngress() *v11.Ingress {
	if x, ok := m.GetObject().(*ApplyRequest_KubernetesObject_Ingress); ok {
		return x.Ingress
	}
	return nil
}

func (m *ApplyRequest_KubernetesObject) GetService() *v1.Service {
	if x, ok := m.GetObject().(*ApplyRequest_KubernetesObject_Service); ok {
		return x.Service
	}
	return nil
}

func (m *ApplyRequest_KubernetesObject) GetConfigMap() *v1.ConfigMap {
	if x, ok := m.GetObject().(*ApplyRequest_KubernetesObject_ConfigMap); ok {
		return x.ConfigMap
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ApplyRequest_KubernetesObject) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ApplyRequest_KubernetesObject_Pod)(nil),
		(*ApplyRequest_KubernetesObject_Ingress)(nil),
		(*ApplyRequest_KubernetesObject_Service)(nil),
		(*ApplyRequest_KubernetesObject_ConfigMap)(nil),
	}
}

type ApplyResponse struct {
	JobId string `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (m *ApplyResponse) Reset()      { *m = ApplyResponse{} }
func (*ApplyResponse) ProtoMessage() {}
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edec332191248d3b, []int{1}
}
func (m *ApplyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyResponse.Merge(m, src)
}
func (m *ApplyResponse) XXX_Size() int {
	return m.Size()
}
func (m *ApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyResponse proto.InternalMessageInfo

func (m *ApplyResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplyRequest)(nil), "api.ApplyRequest")
	proto.RegisterType((*ApplyRequest_KubernetesObject)(nil), "api.ApplyRequest.KubernetesObject")
	proto.RegisterType((*ApplyResponse)(nil), "api.ApplyResponse")
}

func init() { proto.RegisterFile("pkg/api/apply.proto", fileDescriptor_edec332191248d3b) }

var fileDescriptor_edec332191248d3b = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x61, 0x6b, 0x13, 0x31,
	0x18, 0xc7, 0xef, 0xae, 0xdb, 0x6a, 0x33, 0x15, 0x8d, 0x05, 0x8f, 0xaa, 0xe7, 0x3c, 0x10, 0x8a,
	0x62, 0x8e, 0xd5, 0x17, 0x13, 0x61, 0x2f, 0x5a, 0x7d, 0xd1, 0x22, 0xc3, 0x71, 0x7e, 0x82, 0xdc,
	0x35, 0x8b, 0x59, 0xb7, 0x3c, 0x31, 0x49, 0x2b, 0xbe, 0x1b, 0x7e, 0x02, 0xc1, 0x6f, 0xe1, 0x27,
	0xd9, 0xcb, 0x81, 0x08, 0x7b, 0x25, 0xda, 0xfa, 0x41, 0xe4, 0x92, 0x96, 0x1d, 0xda, 0x77, 0x79,
	0x92, 0xdf, 0x2f, 0x79, 0xf2, 0xe7, 0x41, 0x77, 0xd4, 0x84, 0x67, 0x54, 0x89, 0x8c, 0x2a, 0x75,
	0xf2, 0x89, 0x28, 0x0d, 0x16, 0x70, 0x83, 0x2a, 0xd1, 0x49, 0x27, 0x2f, 0x0c, 0x11, 0xe0, 0x0e,
	0x4b, 0xd0, 0x2c, 0x9b, 0xed, 0x66, 0x9c, 0x49, 0xa6, 0xa9, 0x65, 0x63, 0x0f, 0x76, 0xba, 0x35,
	0x46, 0x32, 0xfb, 0x11, 0xf4, 0x44, 0x48, 0xbe, 0x8e, 0xbc, 0xcf, 0x01, 0xf8, 0x09, 0xf3, 0x4f,
	0x49, 0x09, 0x96, 0x5a, 0x01, 0xd2, 0x2c, 0x4f, 0x9f, 0x71, 0x61, 0xdf, 0x4f, 0x0b, 0x52, 0xc2,
	0x69, 0xc6, 0x81, 0x43, 0xe6, 0xb6, 0x8b, 0xe9, 0x91, 0xab, 0x5c, 0xe1, 0x56, 0x1e, 0x4f, 0x7f,
	0x44, 0xe8, 0x7a, 0xbf, 0xea, 0x37, 0x67, 0x1f, 0xa6, 0xcc, 0x58, 0x3c, 0x40, 0x4d, 0x28, 0x8e,
	0x59, 0x69, 0x4d, 0x1c, 0xee, 0x34, 0xba, 0xdb, 0xbd, 0x94, 0x50, 0x25, 0x48, 0x9d, 0x21, 0x6f,
	0xa6, 0x05, 0xd3, 0x92, 0x59, 0x66, 0xde, 0x3a, 0x74, 0xb0, 0x71, 0xfe, 0xf3, 0x61, 0x90, 0xaf,
	0xc4, 0xce, 0x59, 0x84, 0x6e, 0xfd, 0xcb, 0xe0, 0xa7, 0xa8, 0xa1, 0x60, 0x1c, 0x87, 0x3b, 0x61,
	0x77, 0xbb, 0x77, 0x97, 0xf8, 0xef, 0xba, 0xbb, 0xab, 0x48, 0xc8, 0x6c, 0x97, 0x1c, 0xc2, 0x78,
	0x18, 0xe4, 0x15, 0x85, 0xf7, 0x51, 0x53, 0x48, 0xae, 0x99, 0x31, 0x71, 0xe4, 0x84, 0x47, 0x75,
	0xe1, 0x2a, 0x9f, 0x4a, 0x1b, 0x79, 0x70, 0x18, 0xe4, 0x2b, 0x07, 0xef, 0xa1, 0xa6, 0x61, 0x7a,
	0x26, 0x4a, 0x16, 0x37, 0x9c, 0x7e, 0x6f, 0xdd, 0x7b, 0xef, 0x3c, 0x52, 0x89, 0x4b, 0x1a, 0xef,
	0xa3, 0x56, 0x09, 0xf2, 0x48, 0xf0, 0x03, 0xaa, 0xe2, 0x0d, 0xa7, 0x3e, 0x58, 0xa7, 0xbe, 0x5a,
	0x41, 0xc3, 0x20, 0xbf, 0x32, 0x06, 0xd7, 0xd0, 0x96, 0xcf, 0x20, 0x7d, 0x8c, 0x6e, 0x2c, 0x23,
	0x33, 0x0a, 0xa4, 0x61, 0xb8, 0x8d, 0x36, 0x8f, 0xa1, 0x18, 0xf9, 0x00, 0x5a, 0xb9, 0x2f, 0x7a,
	0x07, 0x68, 0xd3, 0x61, 0xf8, 0xf5, 0x6a, 0x71, 0xfb, 0xbf, 0xb8, 0x3b, 0xb8, 0xbe, 0xe5, 0xaf,
	0x4b, 0xdb, 0x9f, 0xbf, 0xff, 0xf9, 0x1a, 0xdd, 0x4c, 0x5b, 0xd5, 0x84, 0xb8, 0x81, 0x7b, 0x19,
	0x3e, 0x19, 0xec, 0x5d, 0xfe, 0x4e, 0x82, 0xb3, 0x79, 0x12, 0x9e, 0xcf, 0x93, 0xf0, 0x62, 0x9e,
	0x84, 0xbf, 0xe6, 0x49, 0xf8, 0x65, 0x91, 0x04, 0x17, 0x8b, 0x24, 0xb8, 0x5c, 0x24, 0xc1, 0xb7,
	0xa8, 0xdd, 0xd7, 0xa7, 0x74, 0x4c, 0x0f, 0x35, 0x54, 0x7d, 0x92, 0x11, 0x90, 0xbe, 0x12, 0xc5,
	0x96, 0x9b, 0x86, 0xe7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x4d, 0xce, 0xdd, 0xc4, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApplyClient is the client API for Apply service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplyClient interface {
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error)
}

type applyClient struct {
	cc *grpc.ClientConn
}

func NewApplyClient(cc *grpc.ClientConn) ApplyClient {
	return &applyClient{cc}
}

func (c *applyClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error) {
	out := new(ApplyResponse)
	err := c.cc.Invoke(ctx, "/api.Apply/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplyServer is the server API for Apply service.
type ApplyServer interface {
	Apply(context.Context, *ApplyRequest) (*ApplyResponse, error)
}

// UnimplementedApplyServer can be embedded to have forward compatible implementations.
type UnimplementedApplyServer struct {
}

func (*UnimplementedApplyServer) Apply(ctx context.Context, req *ApplyRequest) (*ApplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}

func RegisterApplyServer(s *grpc.Server, srv ApplyServer) {
	s.RegisterService(&_Apply_serviceDesc, srv)
}

func _Apply_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplyServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Apply/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplyServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apply_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Apply",
	HandlerType: (*ApplyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _Apply_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/apply.proto",
}

func (m *ApplyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for iNdEx := len(m.Objects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Objects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApply(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ApplyRequest_KubernetesObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyRequest_KubernetesObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest_KubernetesObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Object != nil {
		{
			size := m.Object.Size()
			i -= size
			if _, err := m.Object.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ApplyRequest_KubernetesObject_Pod) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest_KubernetesObject_Pod) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pod != nil {
		{
			size, err := m.Pod.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApply(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *ApplyRequest_KubernetesObject_Ingress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest_KubernetesObject_Ingress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Ingress != nil {
		{
			size, err := m.Ingress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApply(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ApplyRequest_KubernetesObject_Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest_KubernetesObject_Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Service != nil {
		{
			size, err := m.Service.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApply(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ApplyRequest_KubernetesObject_ConfigMap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRequest_KubernetesObject_ConfigMap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ConfigMap != nil {
		{
			size, err := m.ConfigMap.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApply(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ApplyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintApply(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintApply(dAtA []byte, offset int, v uint64) int {
	offset -= sovApply(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ApplyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for _, e := range m.Objects {
			l = e.Size()
			n += 1 + l + sovApply(uint64(l))
		}
	}
	return n
}

func (m *ApplyRequest_KubernetesObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Object != nil {
		n += m.Object.Size()
	}
	return n
}

func (m *ApplyRequest_KubernetesObject_Pod) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pod != nil {
		l = m.Pod.Size()
		n += 1 + l + sovApply(uint64(l))
	}
	return n
}
func (m *ApplyRequest_KubernetesObject_Ingress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ingress != nil {
		l = m.Ingress.Size()
		n += 1 + l + sovApply(uint64(l))
	}
	return n
}
func (m *ApplyRequest_KubernetesObject_Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Service != nil {
		l = m.Service.Size()
		n += 1 + l + sovApply(uint64(l))
	}
	return n
}
func (m *ApplyRequest_KubernetesObject_ConfigMap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfigMap != nil {
		l = m.ConfigMap.Size()
		n += 1 + l + sovApply(uint64(l))
	}
	return n
}
func (m *ApplyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovApply(uint64(l))
	}
	return n
}

func sovApply(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApply(x uint64) (n int) {
	return sovApply(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ApplyRequest) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForObjects := "[]ApplyRequest_KubernetesObject{"
	for _, f := range this.Objects {
		repeatedStringForObjects += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForObjects += "}"
	s := strings.Join([]string{`&ApplyRequest{`,
		`Objects:` + repeatedStringForObjects + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyRequest_KubernetesObject) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyRequest_KubernetesObject{`,
		`Object:` + fmt.Sprintf("%v", this.Object) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyRequest_KubernetesObject_Pod) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyRequest_KubernetesObject_Pod{`,
		`Pod:` + strings.Replace(fmt.Sprintf("%v", this.Pod), "Pod", "v1.Pod", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyRequest_KubernetesObject_Ingress) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyRequest_KubernetesObject_Ingress{`,
		`Ingress:` + strings.Replace(fmt.Sprintf("%v", this.Ingress), "Ingress", "v11.Ingress", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyRequest_KubernetesObject_Service) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyRequest_KubernetesObject_Service{`,
		`Service:` + strings.Replace(fmt.Sprintf("%v", this.Service), "Service", "v1.Service", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyRequest_KubernetesObject_ConfigMap) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyRequest_KubernetesObject_ConfigMap{`,
		`ConfigMap:` + strings.Replace(fmt.Sprintf("%v", this.ConfigMap), "ConfigMap", "v1.ConfigMap", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplyResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplyResponse{`,
		`JobId:` + fmt.Sprintf("%v", this.JobId) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringApply(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ApplyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApply
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objects = append(m.Objects, ApplyRequest_KubernetesObject{})
			if err := m.Objects[len(m.Objects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApply(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApply
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyRequest_KubernetesObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApply
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubernetesObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubernetesObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &v1.Pod{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Object = &ApplyRequest_KubernetesObject_Pod{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ingress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &v11.Ingress{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Object = &ApplyRequest_KubernetesObject_Ingress{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &v1.Service{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Object = &ApplyRequest_KubernetesObject_Service{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigMap", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &v1.ConfigMap{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Object = &ApplyRequest_KubernetesObject_ConfigMap{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApply(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApply
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApply
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApply
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApply
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApply
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApply(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApply
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApply(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApply
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApply
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApply
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApply
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApply
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApply
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApply        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApply          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApply = fmt.Errorf("proto: unexpected end of group")
)
